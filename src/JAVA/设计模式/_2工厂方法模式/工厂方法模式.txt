

工厂方法模式

定义：一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类

条件：

扩展：

  1、简单工厂模式(静态工厂模式)：即工厂类不继承抽象工厂类，

         缺点：工厂类扩展困难，不符合开闭原则

  2、多个工厂类：工厂类的工厂方法的代码结构不清晰时考虑
         每个工厂类负责对应的具体产品类

         缺点：增加一个具体产品类，则增加对应的工厂类

public abstract class AbstractHumanFactory {
  public abstract Human createHuman();
}

public class BlackHumanFactory extends AbstractHumanFactory {
  public Human createHuman() {
     return new BlackHuman();
  }
}




优点：
1 良好封装性，降低模块间耦合。只需传入要创建具体产品的类名即可，不需知道创建对象过程
2 扩展性好。若增加一个具体产品，只需增加具体产品类即可
3 典型解耦框架。高层模块只需知道产品的抽象类，不关心实现类怎样改变

缺点：


应用情景：
1 需要灵活可扩展的框架
2 创建对象的位置，但会造成代码复杂度，视情况而定


