

起源：设计模式原运用在建筑设计，软件设计模式只是借用其原理


对象创建方式：
1、new
2、对象复制
3、反射（构造方法私有化也可）

Class c= Class.forName(Test.class.getName());
Constructor constructor=c.getDeclaredConstructor();
constructor.setAccessible(true);
Test Test = (Test)constructor.newInstance();



单例模式：

定义：确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例

条件：
1 构造方法私有化
2 自身控制创建唯一实例
3 静态方法提供全局访问点

分类：
饿汉式单例模式 (推荐使用)：直接创建赋值给成员变量
懒汉式单例模式：静态方法里创建，需考虑线程安全问题

优点：内存只存在一个实例，减少系统资源开销

缺点：
1 没有接口，扩展困难，若扩展则修改代码
2 并行环境，单例模式完成才可测试往后工作

应用情景：
1 要求一个类有且仅有一个对象
2 创建对象消耗过多资源，如访问IO和数据库等





